
body,
html {
  padding: 0;
  margin: 0;
}

body {
  user-select: text !important;
}

*::selection {
  background: var(--ion-color-shade, rgba(0, 0, 0, 0.3));
}

// Text style
// --------------------------------------------------
.text-italic {
  font-style: italic;
}
.ion-text-wrap {
  white-space: normal;
  word-wrap: break-word;
}

// Page Container Structure
// --------------------------------------------------

.ion-page-invisible {
  opacity: 0;
}

ion-toolbar ion-title,
app-toolbar ion-title {
  small {
    font-weight: normal;
    br {
      display: none;
      visibility: hidden;
    }
  }
  // Add a separator, after the <small> part
  small:first-of-type:after {
    content: " -  ";
  }
}

@media screen and (max-width: $screen-sm-max) {
  ion-toolbar ion-title,
  app-toolbar ion-title {
    small {
      @include font-size(10pt);
    }
    small br {
      display: unset;
      visibility: unset;
    }
    // Add a separator, after the <small> part
    small:first-of-type:after {
      content: "";
    }
  }
}

// Ionic Safe Margins
// --------------------------------------------------
html.plt-ios.plt-hybrid,
html.plt-ios.plt-pwa {
  --ion-statusbar-padding: 20px;
}

html {
  --ion-safe-area-top: var(--ion-statusbar-padding);
}

// TODO: remove once Safari 11.2 dies
@supports (padding-top: constant(safe-area-inset-top)) {
  html {
    --ion-safe-area-top: constant(safe-area-inset-top);
    --ion-safe-area-bottom: constant(safe-area-inset-bottom);
    --ion-safe-area-left: constant(safe-area-inset-left);
    --ion-safe-area-right: constant(safe-area-inset-right);
  }
}

@supports (padding-top: env(safe-area-inset-top)) {
  html {
    --ion-safe-area-top: env(safe-area-inset-top);
    --ion-safe-area-bottom: env(safe-area-inset-bottom);
    --ion-safe-area-left: env(safe-area-inset-left);
    --ion-safe-area-right: env(safe-area-inset-right);
  }
}

// --------------------------------------------------
// Back button in app toolbar
// --------------------------------------------------

.ion-page.can-go-back {
  app-toolbar {

    ion-menu-toggle {
      display: none !important;
    }

    // Back button
    ion-back-button,
    ion-button.back-button {
      display: inline-block !important;
    }
  }
}

// --------------------------------------------------
// Main Menu
// --------------------------------------------------
.split-pane-md.split-pane-visible > .split-pane-side {
  max-width: 300px !important;
}

ion-menu.menu-side-left {
  .menu-inner {
    .scroll {
      overflow-y: auto !important;

      .scroll-inner {
        min-height: auto !important;
      }
    }
  }
}

// --------------------------------------------------
// Material Forms
// --------------------------------------------------
.form-container,
form.form-container {
  color: rgba(0, 0, 0, 0.87);

  .mat-form-field-disabled,
  .mat-input-element:disabled {
    color: rgba(0, 0, 0, 0.55) !important;
  }

  mat-form-field,
  mat-autocomplete-field,
  app-form-field {
    width: 100%;
  }

  mat-form-field {
    @include font-size-important(16px);

    ion-icon[matPrefix],
    mat-icon[matPrefix],
    .mat-form-field-prefix ion-icon,
    .mat-form-field-prefix .mat-icon {
      font-size: 150%;
      line-height: 1.125;
      margin-left: 5px;
      margin-right: 5px;
      height: 0.8em;
      position: relative;
      bottom: -3px;
    }

    ion-icon[matSuffix],
    mat-icon[matSuffix],
    .mat-form-field-suffix ion-icon,
    .mat-form-field-suffix .mat-icon {
      width: 0.8em !important;

      &.large {
        font-size: 150%;
        line-height: 1.125;
      }
    }

    // When field use choice button, reduce the font size, and optimize layout
    button.mat-form-field-button,
    ion-button.mat-form-field-button {
      @include font-size-important(12px);
      margin: 0;
      white-space: normal;
    }
  }


  /* -- Computed field -- */

  // Set color on computed field (if enable or disable)
  .computed mat-form-field,
  mat-form-field .computed,
  mat-form-field.computed,
  .computed mat-form-field .mat-input-element:disabled,
  mat-form-field .computed .mat-input-element:disabled,
  mat-form-field.computed .mat-input-element:disabled {
    color: var(--ion-color-primary-tint) !important;
    font-style: italic;
  }
}
// Manage first child grid inside a form
form.form-container > ion-grid,
ion-grid.form-container {
  padding: 0;

  ion-row {
    // No between grid rows
    padding: 0;

    ion-col > ion-label {
      color: var(--ion-color-primary100);
      padding-inline-end: 5px;
    }

    ion-col > ion-label[text-wrap] {
      word-wrap: normal;
      white-space: normal;
    }
  }
  ion-row > ion-col {

    // No top/bottom padding between grid cell
    padding-bottom: 0;
    padding-top: 0;
  }
}

mat-form-field {
  mat-error {
    text-align: right;
  }

  .mat-paginator-page-size-select {
    @include font-size-important(14px);
  }
}


  // --- mat-date-time
mat-date-time-field {
  // Need for errors injected using the <ng-content> tag
  mat-error {
    text-align: end;
  }
}

@media screen and (min-width: $screen-sm) {
  form.form-container {
    ion-grid {
      ion-col[size-sm="auto"] > mat-date-time-field {
        // When inside a form + grid : fix <ion-col size-sm="auto"> alignment in some screen resolution
        max-width: 200px;
      }
    }
  }
}

// --- mat-autocomplete and mat-select panel
mat-option {
  .mat-option-text:not(:has(ion-row)) {
    padding: 0 16px;
  }

  ion-row,
  .mat-option-text:has(ion-row) {
    padding: 0;
  }
}

mat-option:not(:last-child) {
  border-bottom: 1px solid $lightBorder;
}

.mat-select-panel {
  --min-width: 200px;
  --max-width: 100%;
  min-width: var(--min-width) !important;
  max-width: var(--max-width) !important;
}
.mat-autocomplete-panel {
  --min-width: 250px;
  --max-width: 100%;
  min-width: var(--min-width) !important;
  max-width: var(--max-width) !important;
}

.mat-autocomplete-panel-medium-size .mat-autocomplete-panel,
.mat-autocomplete-panel-medium-size.mat-autocomplete-panel,
.min-width-medium .mat-autocomplete-panel,
.min-width-medium.mat-autocomplete-panel {
  --min-width: 300px;
}
.mat-autocomplete-panel-large-size .mat-autocomplete-panel,
.mat-autocomplete-panel.mat-autocomplete-panel-large-size,
.min-width-large .mat-autocomplete-panel,
.min-width-large.mat-autocomplete-panel {
  --min-width: 400px;
}
.mat-autocomplete-panel-xlarge-size .mat-autocomplete-panel,
.mat-autocomplete-panel-xlarge-size.mat-autocomplete-panel {
  --min-width: 450px;
}

.mat-autocomplete-panel-center .mat-autocomplete-panel,
.mat-autocomplete-panel-center.mat-autocomplete-panel {
  margin-left: calc(var(--min-width, 200px) / -2 + 50%) !important;
}

.mat-autocomplete-panel-full-size .mat-autocomplete-panel,
.mat-autocomplete-panel-full-size.mat-autocomplete-panel {
  --min-width: calc(100vw);
  position: fixed;
  left: 0;
}

.mat-select-panel,
.mat-menu-panel,
.mat-autocomplete-panel {

  ion-row.mat-select-header,
  ion-row.mat-menu-header,
  ion-row.mat-autocomplete-header {
    background-color: var(--ion-color-secondary);
    color: var(--ion-color-secondary-contrast);
    @include font-size(12px);
    font-weight: 500;
    height: 20px;
    line-height: 20px;
    border-bottom: 1px solid $lightBorder;

    ion-col {
      white-space: nowrap;
      text-overflow: ellipsis;
    }
  }

  ion-row {
    --ion-grid-column-padding: 0;

    ion-col {
      padding: 0 !important;
      padding-left: 8px !important;
      text-overflow: ellipsis;
      overflow: hidden;
    }


  }

  .odd {
    background: var(--ion-light-color-shade, $light);
  }

  .mat-option[no-padding],
  mat-option[no-padding] {
    padding: 0 !important;
  }
}

mat-expansion-panel {

  &.filter-panel-floating {
    z-index: 999;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
  }

  &.filter-panel {

    background: var(--ion-color-secondary50);
    color: var(--ion-color-secondary50-contrast);
    margin-bottom: 5px;

    .form-container {
      mat-form-field {
        width: 100%;

        .datetime-md {
          padding: 0 !important;
        }
      }
    }

    mat-action-row {
      ion-label {
        line-height: 36px;
      }
    }
  }

  .mat-expansion-panel-header,
  mat-expansion-panel-header {
    padding: var(--expansion-panel-header-padding, var(--expansion-panel-padding));
  }
  .mat-expansion-panel-body {
    padding: var(--expansion-panel-padding, var(--ion-padding));
  }
}

mat-checkbox {
  .mat-checkbox-checkmark {
    .mat-checkbox-checkmark-path {
      // TODO: change to accent-contrast
      stroke: white !important;
    }
  }
}

// --------------------------------------------------
// Ion-select
// --------------------------------------------------

ion-popover.select-popover {
  .popover-content {
    min-width: calc(min(80%, 200px));
  }
}

@media screen and (min-width: $screen-sm) {
  ion-popover.select-popover {
    .popover-content {
      min-width: 300px;
    }

    ion-radio .radio-icon {
      border: 0 !important;
    }
  }
}


// --------------------------------------------------
// Ionic list
// --------------------------------------------------
ion-list {
  ion-item.ion-item-selected {
    --ion-color-base: var(--ion-color-secondary100);
    --ion-color-contrast: var(--ion-color-secondary100-contrast);

    &:before {
      background: var(--ion-color-base) !important;
      color: var(--ion-color-contrast) !important;
    }
  }
}

// --------------------------------------------------
// Material Table
// --------------------------------------------------
.mat-table {
  min-width: 100%;
  --mat-cell-vertical-padding: 4px;
  /*.mat-cell, .mat-header-cell, .mat-footer-cell {
    padding: 0 10px;
  }*/

  .mat-header-cell.disabled {
      color: var(--ion-color-medium, grey);
  }

  .mat-header-cell > ion-label,
  .mat-header-cell > mat-label,
  .mat-header-cell button > ion-label,
  .mat-header-cell button > mat-label {
    margin-top: 0;
    margin-bottom: 0;
    text-align: start;
  }

  .mat-header-cell > ion-label[text-wrap],
  .mat-header-cell button > ion-label[text-wrap] {
    white-space: normal;
    word-wrap: break-word;
  }

  .mat-header-cell[align-self-center] > ion-label,
  .mat-header-cell[align-self-center] > mat-label,
  .mat-header-cell[align-self-center] button > ion-label,
  .mat-header-cell[align-self-center] button > mat-label,
  .mat-row[align-self-center] {
    text-align: center;
    align-self: center;
  }

  .mat-header-row,
  .mat-row {
    --mat-cell-vertical-padding: 8px;

    border-left: 2px solid transparent;
    max-height: 52px;
    /*z-index: 999;*/
    padding: 0 0 0 5px !important;

    .mat-header-cell,
    .mat-cell {
      padding-inline-start: var(--mat-cell-vertical-padding);
      //border-left: 1px solid rgba(0, 0, 0, 0.12);
    }

    .mat-column-select {
      overflow: initial;
      max-width: 50px;
    }

    .mat-column-id {
      min-width: 50px;
      max-width: 80px;
    }

    .mat-column-comments {
      min-width: 30px;
    }

    .mat-column-actions {
      min-width: 40px;
    }

    .mat-cell-date-time {
      //min-width: 145px;
      min-width: 180px;

      input {
        max-width: 120px;
        overflow: visible !important;
      }
    }

    .mat-cell.computed mat-form-field,
    .mat-cell-computed,
    .mat-cell ion-text.computed,
    .mat-cell.calculated mat-form-field,
    .mat-cell-calculated {
      color: var(--ion-color-primary-tint);
      font-style: italic;
    }

    /* Special case if cell need left padding (e.g. BatchGroupsTable) */
    .mat-header-cell.content-padding-left > ion-label,
    .mat-header-cell.content-padding-left > mat-label {
      padding: 0 var(--mat-cell-vertical-padding, 8px);
    }
    .mat-cell.content-padding-left {
      .mat-form-field-label {
        width: 100%;
        padding-left: var(--mat-cell-vertical-padding, 8px);
      }
      .mat-form-field-infix {
        padding-left: var(--mat-cell-vertical-padding, 8px);
      }
    }
  }

  .mat-row {

    .mat-form-field-disabled,
    .mat-input-element:disabled,
    .mat-form-field-disabled * {
      pointer-events: inherit;
      color: inherit;

      .mat-form-field-underline {
        background: none !important;
        display: none;
      }

      .mat-select-arrow-wrapper .mat-select-arrow {
        visibility: hidden;
        width: 0;
        border: 0;
      }

      .mat-form-field-label {
        visibility: hidden;
      }
    }

    .mat-form-field-underline {
      bottom: 9px !important;
    }

    mat-form-field,
    mat-autocomplete-field,
    app-form-field,
    .mat-form-field {
      width: 100%;
    }

    .mat-form-field {
      .mat-form-field-label {
        width: 100%;
      }

      .mat-form-field-wrapper {
        padding-bottom: 10px;
      }

      .mat-form-field-infix {
        width: 100%;
        white-space: nowrap;
        overflow: inherit;

        .mat-input-element,
        input {
          //margin-left: 5px;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }

        input[type=number]::-webkit-outer-spin-button,
        input[type=number]::-webkit-inner-spin-button {
          -webkit-appearance: none;
          margin: 0;
        }

        input[type=number] {
          //text-align: right;
          -moz-appearance: textfield;
        }
      }
    }

    .mat-form-field-subscript-wrapper {
      margin-top: -0.1rem !important;
    }

    .mat-boolean-field-radio.mat-form-field-appearance-legacy .mat-form-field-infix,
    .mat-boolean-field-radio .mat-form-field-infix {
      // Reduce top border (because of radio height)
      border-top: 0.5em solid transparent !important;
    }

    .mat-boolean-field-checkbox.mat-form-field-appearance-legacy .mat-form-field-infix,
    .mat-boolean-field-checkbox .mat-form-field-infix {
      // Increase top border (because of checkbox height)
      padding-top: 0.4em;
    }

    .mat-boolean-field-button.mat-form-field-appearance-legacy .mat-form-field-infix,
    .mat-boolean-field-button .mat-form-field-infix {
      // Increase top border (because of button height)
      padding-top: 0.4em;
    }

    .mat-cell > .ion-text-nowrap {
      width: 100%;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: pre;
    }

    /* Show when hover row */
    .mat-cell .visible-hover-row {
      visibility: hidden;
    }
    &:hover {
      .mat-cell .visible-hover-row {
        visibility: visible;
      }
    }
  }



  /* Special case to have small row */
  .mat-row-small {
    min-height: inherit;
    max-height: 33px !important;
  }
  .mat-row.mat-small .mat-cell,
  .mat-row .mat-cell.mat-small{
    line-height: 15px;
    @include font-size(12px);
  }

  mat-cell .avatar {
    color: #d9d9d9;
    background-color: #f8f8f8;
    border: solid 1px #d9d9d9;
    overflow: hidden !important;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: inline-block;
  }

  .mat-row.mat-row-disabled {
    cursor: pointer;

    * {
      pointer-events: inherit;
    }
  }

  .mat-row.mat-row-disabled:hover {
    background-color: var(--ion-color-light);

    .mat-cell{
      color: var(--ion-color-light-contrast);
    }
  }

  .mat-row.mat-row-selected {
    background-color: var(--ion-color-secondary100);

    .mat-cell{
      color: var(--ion-color-secondary100-contrast);
    }

    &.mat-row-disabled:hover {
      background-color: var(--ion-color-secondary100-shade) !important;
    }
  }

  .mat-row.mat-row-dirty {
    border-left: 2px solid var(--ion-color-primary-tint, var(--ion-color-primary));
  }

  .mat-row.mat-row-error {
    margin-top: -1px;
    border: 2px dashed var(--ion-color-danger);
  }

  .mat-row-height-auto {
    max-height: unset !important;
  }
}


@media screen and (max-width: $screen-sm-max) {
  mat-table {

    mat-cell:first-child,
    mat-footer-cell:first-child,
    mat-header-cell:first-child {
      //padding-right: 8px !important;
    }

    // Reuse the first column, to inject a left padding
    .mat-column-select {
      /*max-width: 8px !important;
      overflow: hidden;

      * {
        display: none !important;
        visibility: hidden !important;
      }*/
    }

    .mat-column-comments {
      /*display: none !important;
      visibility: hidden !important;*/
    }
  }
}

.table-container {
  max-width: 100%;
  max-height: 100%;
  overflow-x: auto;
}

.mat-paginator-footer {

  background-color: whitesmoke;

  .mat-paginator-outer-container {
    height: 34px;
    overflow-y: hidden;
    .mat-paginator-container {
      height: 34px;
      min-height: unset;
      margin-top: 10px;

      button {
        height: 34px;
        width: 34px;
        line-height: 34px;
      }
    }
  }

}

html {
  --form-button-bar-height: 56px;
}

html.plt-mobile {

  --form-button-bar-height: 0;

  .mat-paginator-footer {
    .mat-paginator-outer-container {
      .mat-paginator-container {

        // Move paginator to the left,
        // because floating button are on the right
        margin-top: 0 !important;
        justify-content: flex-start;

        // Hide page size (not need on small screens)
        .mat-paginator-page-size {
          visibility: hidden;
          display: none;
        }
      }
    }
  }
}

// ------------------------
// Other material component

.flex-spacer,
.toolbar-spacer {
  flex: 1 1 auto;
}

ion-toolbar[translucent] {
  --background: transparent !important;
}

// --- mat-stepper component
mat-horizontal-stepper {
  .mat-horizontal-stepper-header-container {
    padding: 0;
  }

  .mat-horizontal-content-container {
    padding: 0;
  }
}


// Extra small device: Phones (<767px)
@media screen and (max-width: $screen-xs-max) {
  mat-horizontal-stepper {
    .mat-horizontal-stepper-header-container {
      .mat-horizontal-stepper-header {
        padding-left: 5px;
      }

      .mat-stepper-horizontal-line {
        display: none;
      }
    }

    .mat-horizontal-content-container {
      padding: 0;
    }
  }
}

mat-button-toggle.mat-button-toggle-checked,
mat-button-toggle.mat-button-toggle-checked.mat-button-toggle-disabled {
  background-color: var(--ion-color-light);
  color: white;
}

// --- mat-tab-group component
mat-tab-group.mat-tab-group-header-hidden .mat-tab-header {
    display: none !important;
}
mat-tab-group.mat-tab-group-header-pagination-hidden .mat-tab-header-pagination {
  display: none !important;
}

mat-tab-group.mat-tab-disabled-hidden .mat-tab-disabled {
  display: none !important;
}

// --------------------------------------------------
// Material menu
// --------------------------------------------------


.mat-menu-panel {

  // Max width = 400px
  &.mat-menu-size-400 {
    min-width: unset;
    width: 400px;
    max-width: calc(90vw);
  }
  // Max width = 75vw
  &.mat-menu-size-75vw {
    min-width: unset;
    width: calc(75vw);
    max-width: calc(90vw);
  }

  // No padding
  &.ion-no-padding {
    .mat-menu-content {
      padding: 0 !important;
    }
  }

  // Small menu item (e.g. for actions on a table row)
  &.mat-menu-small-item-height .mat-menu-item,
  .mat-menu-item.mat-menu-item-small-height
  {
    padding: 0 8px;
    height: 35px;
    line-height: 35px;
  }
  //  Reduce the font size, on label just inside a mat-menu (e.g. see trips.page.html)
  .mat-menu-content > ion-label {
    @include font-size(12px);
  }

  .mat-menu-content ion-item > ion-icon[slot="start"] {
    margin-right: 16px;
    vertical-align: middle;
  }

  // Menu title (e.g. see extraction map)
  .mat-menu-item.mat-menu-title {
    padding: 0 8px;
    height: 27px;
    line-height: 27px;
    @include font-size(12px);
    pointer-events: none;
    color: var(--ion-color-medium, rgba(0, 0, 0, 0.38));
  }
}

// --------------------------------------------------
// Alert
// --------------------------------------------------

ion-alert button.alert-button {
  cursor: pointer;
}

// --------------------------------------------------
// Date and time picker
// --------------------------------------------------

mat-calendar {
  .mat-calendar-header {
    background-color: var(--ion-color-secondary) !important;
    color: var(--ion-color-secondary-contrast) !important;

    button {
      color: var(--ion-color-secondary-contrast) !important;
    }
  }

  .mat-calendar-body-selected {
    background-color: var(--ion-color-accent) !important;
    color: var(--ion-color-accent-contrast) !important;
    font-weight: bold;
  }

  .mat-calendar-arrow {
    border-top-color: var(--ion-color-secondary-contrast) !important;
  }
}


.timepicker-backdrop-overlay {
  background-color: rgba(0, 0, 0, 0.32);
  z-index: 1000;
  opacity: 1;
  -webkit-tap-highlight-color: transparent;
  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);
}

ngx-material-timepicker-content {
  --clock-hand-color: var(--ion-color-accent) !important;
  --clock-face-time-active-color: var(--ion-color-accent-contrast) !important;
  @extend .mat-dialog-container;

  .timepicker {
    box-shadow: unset !important;
    border-radius: 4px;

    header {
      --dial-background-color: var(--ion-color-secondary) !important;
      color: var(--ion-color-secondary-contrast) !important;
    }
  }

  ngx-material-timepicker-dial-control {
    outline-color: var(--ion-color-accent) !important;
    input {
      outline-color: inherit !important;
    }
  }
}

// --------------------------------------------------
// Pages
// --------------------------------------------------
ion-item {
  ion-label.error {
    line-height: 16px;
    line-break: normal;
    overflow: visible;
    white-space: normal;
  }
}

// --------------------------------------------------
// Modal
// --------------------------------------------------

.modal-large .modal-wrapper {
  min-width: calc(100% - 100px);
  min-height: calc(100% - 50px);
}

// --------------------------------------------------
// Large button with icon floating on right
// --------------------------------------------------
.flex-margin ion-icon,
.flex-margin span {
  margin-left: auto;
}

// --------------------------------------------------
// Icon tooltip, and title
// --------------------------------------------------
// Fix Button icon name overrides button's own title on mouse over
/*ion-icon[name='chatbox'] {
  pointer-events: none !important;
}*/
.mat-cell {
  /* smaller size, for the comment icon */
  mat-icon.comment {
    font-size: 16pt;
    height: 100%;
    vertical-align: center;
    color: var(--ion-color-tertiary, grey);

    &.disabled {
      color: var(--ion-color-medium, grey);
    }
  }
}

// --------------------------------------------------
// Icon inside text
// --------------------------------------------------
mat-icon,
ion-icon {
  &.text-size {
    font-size: 1em;
    width: 1em;
    height: 1em;
  }
}
ion-button[expand="block"],
ion-button[expand="full"],
.mat-button,
.mat-raised-button {
  mat-icon,
  ion-icon {
    &[slot] {
      pointer-events: none;
      width: 24px;
      height: 24px;
    }
    &[slot='start'],
    &[slot='end'] {
      margin-left: unset;
      margin-right: unset;
      margin-top: 0;
      margin-bottom: 0;
    }
    &t[slot='start'] {
      margin-inline-start: -0.3em;
      margin-inline-end: 0.3em;
    }
    &[slot='end'] {
      margin-inline-start: 0.3em;
      margin-inline-end: -0.3em;
    }
    &.ion-float-start[slot='start'] {
      position: absolute;
      left: 0;
    }
    &.ion-float-end[slot='end'] {
      position: absolute;
      right: 0;
    }
  }
}

// --------------------------------------------------
// Icon multiple
// --------------------------------------------------
mat-icon.icon-secondary {
  position: absolute;
  left: 0;
}

// --------------------------------------------------
// Toast
// --------------------------------------------------
ion-toast {
  --background:  var(--ion-color-dark);
  --color: var(--ion-color-dark-contrast);
  --button-color: var(--ion-color-secondary);

  &.secondary {
    --background: var(--ion-color-secondary);
    --color: var(--ion-color-secondary-contrast);
    --button-color: var(--ion-color-tertiary);
  }
  &.accent {
    --background: var(--ion-color-accent);
    --color: var(--ion-color-accent-contrast);
    --button-color: var(--ion-color-primary);
  }
  &.danger {
    --background: var(--ion-color-danger);
    --color: var(--ion-color-danger-contrast);
    --button-color: var(--ion-color-primary);
  }
}
// --------------------------------------------------
// Refresher
// --------------------------------------------------
ion-refresher.refresher-native {
  z-index: 1000;
}
